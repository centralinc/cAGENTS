name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
          - os: macos-13  # Intel x64
          - os: macos-latest  # Apple Silicon ARM64
          - os: windows-latest
    env:
      RUST_BACKTRACE: 1
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      # Cache Rust dependencies and build artifacts
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          shared-key: ${{ runner.os }}-cargo

      - name: Build Rust workspace
        run: cargo build --workspace --locked --all-targets

      - name: Build release binary (for canary)
        run: cargo build --release --workspace --locked

      - name: Run tests
        run: cargo test --workspace --locked -- --nocapture

      - name: Run clippy
        run: cargo clippy --workspace --all-targets --locked -- -D warnings

      - name: Upload release binary artifact (for canary reuse)
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: binary-${{ runner.os }}-${{ runner.arch }}
          path: |
            target/release/cagents${{ runner.os == 'Windows' && '.exe' || '' }}
          retention-days: 1
          if-no-files-found: error
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9

      # Cache pnpm dependencies
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Build Node wrapper
        run: pnpm -w i && pnpm -w -r build
